name: Build PR (ocamlformat)

on:
  pull_request:
    branches:
      - 'master'
  push:
    branches:
      - 'master'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - ocaml-variants.4.11.2+flambda
        opam-disable-sandboxing:
          - true

    runs-on: ${{ matrix.os }}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}

      # checking out the code seems to be important because local switch is used
      - name: Checkout code
        #uses: ocaml/setup-ocaml@v2
        uses: ocaml/setup-ocaml@5319ab427f3840efb109b436a4e6f047dcd9db9f
          # working around issue with depext and opam 2.1
        with:
          fetch-depth: 0                      # fix me later

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true

      #- name: Enable dune cache
      #  run: mkdir -p ~/.config/dune && echo '(lang dune 2.8)' > ~/.config/dune/config && echo '(cache enabled)' >> ~/.config/dune/config

      # Smart link about setting environment variables
      # https://docs.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable
      - run: |
          ./detect_latest.sh >> $GITHUB_ENV
          echo "${{ env.latest }}"

      - run: |
          cd ${{ env.latest }} && opam install . --deps-only --with-test

      - name: Naive linting
        run: |
          cd ${{ env.latest }}  && ../mylint.sh Lambda

      - name: Checking ocamlformat
        run: |
          cd ${{ env.latest }} && opam exec -- dune build @fmt
